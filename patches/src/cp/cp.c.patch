--- cp/cp.c.orig	2021-04-09 02:24:01.000000000 +0200
+++ cp/cp.c	2022-07-27 20:23:03.423337122 +0200
@@ -75,6 +75,7 @@ __FBSDID("$FreeBSD$");
 #include <unistd.h>
 
 #include "extern.h"
+#include "compat.h"
 
 #define	STRIP_TRAILING_SLASH(p) {					\
 	while ((p).p_end > (p).p_path + 1 && (p).p_end[-1] == '/')	\
@@ -92,7 +93,7 @@ volatile sig_atomic_t info;
 enum op { FILE_TO_FILE, FILE_TO_DIR, DIR_TO_DNE };
 
 static int copy(char *[], enum op, int);
-static void siginfo(int __unused);
+static void siginfo(int __attribute__((unused)));
 
 int
 main(int argc, char *argv[])
@@ -375,12 +376,9 @@ copy(char *argv[], enum op type, int fts
 			if (pflag) {
 				if (setfile(curr->fts_statp, -1))
 					rval = 1;
-				if (preserve_dir_acls(curr->fts_statp,
-				    curr->fts_accpath, to.p_path) != 0)
-					rval = 1;
 			} else {
 				mode = curr->fts_statp->st_mode;
-				if ((mode & (S_ISUID | S_ISGID | S_ISTXT)) ||
+				if ((mode & (S_ISUID | S_ISGID | S_ISVTX)) ||
 				    ((mode | S_IRWXU) & mask) != (mode & mask))
 					if (chmod(to.p_path, mode & mask) !=
 					    0) {
@@ -497,7 +495,7 @@ copy(char *argv[], enum op type, int fts
 }
 
 static void
-siginfo(int sig __unused)
+siginfo(int sig __attribute__((unused)))
 {
 
 	info = 1;
