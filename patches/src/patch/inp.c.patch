--- patch/inp.c.orig	2022-07-31 22:22:08.117184575 +0200
+++ patch/inp.c	2022-07-31 22:49:32.160268605 +0200
@@ -35,6 +35,7 @@
 
 #include <ctype.h>
 #include <errno.h>
+#include <fcntl.h>
 #include <libgen.h>
 #include <paths.h>
 #include <spawn.h>
@@ -284,8 +285,9 @@ static void
 plan_b(const char *filename)
 {
 	FILE	*ifp;
-	size_t	i = 0, j, len, maxlen = 1;
-	char	*lbuf = NULL, *p;
+	size_t	i = 0, j, blen = 0, maxlen = 1;
+	ssize_t len;
+	char	*lbuf = NULL, *p = NULL;
 	bool	found_revision = (revision == NULL);
 
 	using_plan_a = false;
@@ -294,7 +296,7 @@ plan_b(const char *filename)
 	unlink(TMPINNAME);
 	if ((tifd = open(TMPINNAME, O_EXCL | O_CREAT | O_WRONLY, 0666)) < 0)
 		pfatal("can't open file %s", TMPINNAME);
-	while ((p = fgetln(ifp, &len)) != NULL) {
+	while ((len = getline(&p, &blen, ifp)) >= 0) {
 		if (p[len - 1] == '\n')
 			p[len - 1] = '\0';
 		else {
@@ -303,6 +305,7 @@ plan_b(const char *filename)
 				fatal("out of memory\n");
 			memcpy(lbuf, p, len);
 			lbuf[len] = '\0';
+			free(p);
 			p = lbuf;
 
 			last_line_missing_eol = true;
@@ -310,10 +313,10 @@ plan_b(const char *filename)
 		}
 		if (revision != NULL && !found_revision && rev_in_string(p))
 			found_revision = true;
-		if (len > maxlen)
+		if ((size_t)len > maxlen)
 			maxlen = len;   /* find longest line */
 	}
-	free(lbuf);
+	free(p);
 	if (ferror(ifp))
 		pfatal("can't read file %s", filename);
 
