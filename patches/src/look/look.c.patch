--- look/look.c.orig	2022-07-28 10:02:15.701592919 +0200
+++ look/look.c	2022-07-28 10:08:40.159930152 +0200
@@ -82,12 +82,12 @@ static char _path_words[] = _PATH_WORDS;
 
 static int dflag, fflag;
 
-static char	*binary_search(wchar_t *, unsigned char *, unsigned char *);
-static int	 compare(wchar_t *, unsigned char *, unsigned char *);
-static char	*linear_search(wchar_t *, unsigned char *, unsigned char *);
-static int	 look(wchar_t *, unsigned char *, unsigned char *);
+static char	*binary_search(wchar_t *, char *, char *);
+static int	 compare(wchar_t *, char *, char *);
+static char	*linear_search(wchar_t *, char *, char *);
+static int	 look(wchar_t *, char *, char *);
 static wchar_t	*prepkey(const char *, wchar_t);
-static void	 print_from(wchar_t *, unsigned char *, unsigned char *);
+static void	 print_from(wchar_t *, char *, char *);
 
 static void usage(void);
 
@@ -105,8 +105,8 @@ main(int argc, char *argv[])
 	struct stat sb;
 	int ch, fd, match;
 	wchar_t termchar;
-	unsigned char *back, *front;
-	unsigned const char *file;
+	char *back, *front;
+	const char *file;
 	wchar_t *key;
 
 	(void) setlocale(LC_CTYPE, "");
@@ -149,7 +149,7 @@ main(int argc, char *argv[])
 	do {
 		if ((fd = open(file, O_RDONLY, 0)) < 0 || fstat(fd, &sb))
 			err(2, "%s", file);
-		if ((uintmax_t)sb.st_size > (uintmax_t)SIZE_T_MAX)
+		if ((uintmax_t)sb.st_size > (uintmax_t)SIZE_MAX)
 			errx(2, "%s: %s", file, strerror(EFBIG));
 		if (sb.st_size == 0) {
 			close(fd);
@@ -182,8 +182,10 @@ prepkey(const char *string, wchar_t term
 	readp = string;
 	writep = key;
 	while ((clen = mbrtowc(&ch, readp, MB_LEN_MAX, NULL)) != 0) {
-		if (clen == (size_t)-1 || clen == (size_t)-2)
-			errc(2, EILSEQ, NULL);
+		if (clen == (size_t)-1 || clen == (size_t)-2) {
+			errno = EILSEQ;
+			err(2, NULL);
+		}
 		if (fflag)
 			ch = towlower(ch);
 		if (!dflag || iswalnum(ch))
@@ -197,7 +199,7 @@ prepkey(const char *string, wchar_t term
 }
 
 static int
-look(wchar_t *string, unsigned char *front, unsigned char *back)
+look(wchar_t *string, char *front, char *back)
 {
 
 	front = binary_search(string, front, back);
@@ -251,9 +253,9 @@ look(wchar_t *string, unsigned char *fro
 	while (p < back && *p++ != '\n');
 
 static char *
-binary_search(wchar_t *string, unsigned char *front, unsigned char *back)
+binary_search(wchar_t *string, char *front, char *back)
 {
-	unsigned char *p;
+	char *p;
 
 	p = front + (back - front) / 2;
 	SKIP_PAST_NEWLINE(p, back);
@@ -285,7 +287,7 @@ binary_search(wchar_t *string, unsigned
  *	o front is before or at the first line to be printed.
  */
 static char *
-linear_search(wchar_t *string, unsigned char *front, unsigned char *back)
+linear_search(wchar_t *string, char *front, char *back)
 {
 	while (front < back) {
 		switch (compare(string, front, back)) {
@@ -305,7 +307,7 @@ linear_search(wchar_t *string, unsigned
  * Print as many lines as match string, starting at front.
  */
 static void
-print_from(wchar_t *string, unsigned char *front, unsigned char *back)
+print_from(wchar_t *string, char *front, char *back)
 {
 	for (; front < back && compare(string, front, back) == EQUAL; ++front) {
 		for (; front < back && *front != '\n'; ++front)
@@ -330,7 +332,7 @@ print_from(wchar_t *string, unsigned cha
  * "back" terminated).
  */
 static int
-compare(wchar_t *s1, unsigned char *s2, unsigned char *back)
+compare(wchar_t *s1, char *s2, char *back)
 {
 	wchar_t ch1, ch2;
 	size_t len2;
