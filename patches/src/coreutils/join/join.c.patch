--- join/join.c.orig	2022-05-12 06:54:04.000000000 +0200
+++ join/join.c	2022-08-01 01:00:15.437603464 +0200
@@ -47,6 +47,7 @@ static char sccsid[] = "@(#)join.c	8.6 (
 #include <sys/cdefs.h>
 __FBSDID("$FreeBSD$");
 
+#include <sys/types.h>
 #include <sys/param.h>
 
 #include <err.h>
@@ -276,9 +277,10 @@ static void
 slurp(INPUT *F)
 {
 	LINE *lp, *lastlp, tmp;
-	size_t len;
+	size_t blen = 0;
+	ssize_t len;
 	int cnt;
-	char *bp, *fieldp;
+	char *bp, *buf = NULL, *fieldp;
 
 	/*
 	 * Read all of the lines from an input file that have the same
@@ -321,21 +323,21 @@ slurp(INPUT *F)
 			F->pushbool = 0;
 			continue;
 		}
-		if ((bp = fgetln(F->fp, &len)) == NULL)
+		if ((len = getline(&buf, &blen, F->fp)) < 0) {
+			free(buf);
 			return;
-		if (lp->linealloc <= len + 1) {
+		}
+		if (lp->linealloc <= (size_t)(len + 1)) {
 			lp->linealloc += MAX(100, len + 1 - lp->linealloc);
 			if ((lp->line =
 			    realloc(lp->line, lp->linealloc)) == NULL)
 				err(1, NULL);
 		}
-		memmove(lp->line, bp, len);
+		memmove(lp->line, buf, len);
 
 		/* Replace trailing newline, if it exists. */
-		if (bp[len - 1] == '\n')
+		if (buf[len - 1] == '\n')
 			lp->line[len - 1] = '\0';
-		else
-			lp->line[len] = '\0';
 		bp = lp->line;
 
 		/* Split the line into fields, allocate space as necessary. */
@@ -359,6 +361,7 @@ slurp(INPUT *F)
 			break;
 		}
 	}
+	free(buf);
 }
 
 static char *
@@ -373,8 +376,10 @@ mbssep(char **stringp, const wchar_t *de
 		return (NULL);
 	for (tok = s;;) {
 		n = mbrtowc(&c, s, MB_LEN_MAX, NULL);
-		if (n == (size_t)-1 || n == (size_t)-2)
-			errc(1, EILSEQ, NULL);	/* XXX */
+		if (n == (size_t)-1 || n == (size_t)-2) {
+			errno = EILSEQ;
+			err(1, NULL);	/* XXX */
+		}
 		s += n;
 		spanp = delim;
 		do {
