--- sort/file.c.orig	2021-04-09 02:24:12.000000000 +0200
+++ sort/file.c	2022-07-30 20:50:48.071694862 +0200
@@ -39,6 +39,7 @@ __FBSDID("$FreeBSD$");
 #include <fcntl.h>
 #if defined(SORT_THREADS)
 #include <pthread.h>
+#include <sched.h>
 #endif
 #include <semaphore.h>
 #include <stdio.h>
@@ -52,6 +53,8 @@ __FBSDID("$FreeBSD$");
 #include "file.h"
 #include "radixsort.h"
 
+#include "compat.h"
+
 unsigned long long free_memory = 1000000;
 unsigned long long available_free_memory = 1000000;
 
@@ -632,7 +635,7 @@ file_reader_init(const char *fsrc)
 			size_t sz = 0;
 			int fd, flags;
 
-			flags = MAP_NOCORE | MAP_NOSYNC;
+			flags = MAP_PRIVATE;
 
 			fd = open(fsrc, O_RDONLY);
 			if (fd < 0)
@@ -654,6 +657,7 @@ file_reader_init(const char *fsrc)
 				close(fd);
 				break;
 			}
+			madvise(addr, sz, MADV_DONTDUMP);
 
 			ret->fd = fd;
 			ret->mmapaddr = addr;
@@ -1560,7 +1564,7 @@ mt_sort(struct sort_list *list,
 			pthread_attr_t attr;
 
 			pthread_attr_init(&attr);
-			pthread_attr_setdetachstate(&attr, PTHREAD_DETACHED);
+			pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);
 
 			for (;;) {
 				int res = pthread_create(&pth, &attr,
@@ -1569,7 +1573,7 @@ mt_sort(struct sort_list *list,
 				if (res >= 0)
 					break;
 				if (errno == EAGAIN) {
-					pthread_yield();
+					sched_yield();
 					continue;
 				}
 				err(2, NULL);
